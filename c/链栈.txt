#include<stdio.h>
#include<malloc.h>
#include<iostream>
using namespace std;
typedef int ElemType;
typedef struct linknode
{
	ElemType data;
    struct linknode* next;
}LinkStNode;
void InitStack(LinkStNode* &s)
{
	s = (LinkStNode*)malloc(sizeof(LinkStNode));
	s->next = NULL;
}
bool StackEmpty(LinkStNode* s)
{
	return(s->next == NULL);
}
void Push(LinkStNode* &s,ElemType e)
{
	LinkStNode* p;
	p = (LinkStNode*)malloc(sizeof(LinkStNode));
	p->data = e;
	p->next = s->next;
	s->next = p;
}
bool Pop(LinkStNode* &s, ElemType &e)
{
	LinkStNode* p;
	if (s->next == NULL)
		return false;
	p = s->next;
	e = p->data;
	s->next = p->next;
	free(p);
	return true;
}
int main()
{
	int e,n;
	LinkStNode* S1;
	InitStack(S1);
	for (int i = 1; i > 0; i++)
	{
		cout << "1.判断是否为空栈" << endl;
		cout << "2.进栈" << endl;
		cout << "3.出栈" << endl;
		cout << "4.退出程序" << endl;
		cin >> n;
		if (n == 1)
		{
			StackEmpty(S1);
			int a;
			a = StackEmpty(S1);
			if (a == 0)
				cout << "栈未空" << endl;
			if (a == 1)
				cout << "栈已空" << endl;
		}
		if (n == 2)
		{
			cout << "请输入进栈的数据：" ;
			cin >> e;
			Push(S1, e);
		}
		if (n == 3)
		{
			int a;
			a = Pop(S1, e);
			if (a == 1)
				cout << "出栈元素为：" << e << endl;
			if (a == 0)
				cout << "栈已空" << endl;
		}
		if (n == 4)
			break;
	}
}